name: Qt CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
    build:
      strategy:
        matrix:
          os: [windows-latest]
      runs-on: ${{ matrix.os }}
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Install Qt
          uses: jurplel/install-qt-action@v3
          with:
            version: 6.5.3
            arch: win64_msvc2019_64  # 直接指定架构，无需映射

        - name: Set Qt Environment
          if: runner.os == 'Windows'
          shell: cmd
          run: |
            call "D:\Qt\6.5.3\msvc2019_64\bin\qtenv2.bat"
            echo "QT_DIR=D:\Qt\6.5.3\msvc2019_64" >> %GITHUB_ENV

        - name: Configure Project
          shell: bash
          run: |
            mkdir build
            cd build
            qmake ..

        - name: Build Project
          shell: bash
          run: |
            cd build
            nmake

        - name: Run Tests
          shell: bash
          run: |
            cd build
            ./huehnerManager

        # 步骤 1：打包产物
        - name: Package Artifacts
          if: runner.os == 'Windows' && github.ref == 'refs/heads/main'
          run: |
            mkdir release
            cp build/release/huehnerManager.exe release/
            7z a huehnerManager-Windows.zip ./release/*

        # 步骤 2：上传到 GitHub Releases
        - name: Upload Release
          if: runner.os == 'Windows' && github.ref == 'refs/heads/main'
          uses: softprops/action-gh-release@v1
          with:
            files: huehnerManager-Windows.zip
